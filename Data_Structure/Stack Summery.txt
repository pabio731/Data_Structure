


스택 -> 물건을 쌓다라는 의미. 명사로는 "더미"
자료구조에서의 스택의 고유한 특성 -> LIFO(Last in First out) : 가장 나중에 들어간 자료가 가장 먼저 나온다. 후입선출
스택도 선형구조(자료와 자료간의 선후관계가 1:1), 한 물건 위에는 오직 하나의 물건만.
다른 말로는 FILO(First in Last Out) : 가장 먼저 들어간 자료가 가장 나중에 나온다. 선입후출

자료를 추가하거나 꺼내는 것(반환)은 스택의 끝(가장 최근에 추가된 자료)에서만 가능
수식을 해석하고 계산하는 데에도 사용되기도 하고, 미로를 찾을 때 사용할 수도 있고 트리나 그래프에서도 내부적으로 사용할 수 있다.

스택에 자료를 추가 ->Push
스택에서 자료를 반환 -> Pop
꺼내지 않고 가장 위 자료에 접근만 하는 것 -> Peek
정해진 스택의 크기가 있다면, 오버플로우를 조심할 것.
마찬가지로 스택이 비어있을 때, Pop을 하는 오버플로우에 대한 고려도.


스택의 추상 자료형

이름									입력					출력
1. 스택생성		CreateStack()		스택의 크기n			스택S
2. 스택삭제		DeleteStack()		스택S				스택제거(메모리 반환)
3. 추가가능여부	IsFull()			스택S				T/F							-> 배열 스택인 경우만 의미 있음
3. 공백인지판단	IsEmpty()			스택S				T/F
4. 푸시			Push()				스택S,원소D			성공/실패여부			
5. 팝			Pop()				스택S				원소D						-> 데이터를 리턴하고 제거
6. 피크			Peek()				스택S				원소D						-> 데이터를 리턴하지만 제거하지는 않음

!!!! 스택을 구현하면서 알게된 내용
1. 템플릿을 사용하면 헤더 파일과 구현(정의)파일을 분리하면 링크 에러가 난다.
	헤더 파일에서 정의를 하거나. 
	메인함수가 있는 파일에서 헤더 파일과(.h or .hpp) 구현파일(.cpp)을 같이 
	include 하면 해결!