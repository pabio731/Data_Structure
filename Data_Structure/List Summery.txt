


리스트
리스트는 자료를 한줄로 세우는 것. 순서대로 저장하는 것이다. 즉 선형의 자료 구조.

배열은 아주 단순한 리스트의 예시이다. 단 중간의 자료를 추가 하거나 삭제하는 과정이 매우 비효율적이다.
이러한 불편점을 개선한 것이 포인터를 이용한 리스트이다. 각 자료는 실제로 붙어있는 것이 아니라
붙어있는 것과 같이 포인터를 이용해 연결만 한 것이며, 자료를 추가할 때는 동적으로 할당해 포인터만 연결해주면 되고,
삭제할 때는 삭제한 자료의 포인터 양옆의 포인터끼리만 다시 이어주면된다.

문자와 문자열 리스트
문자를 연결한 리스트 = 문자열.
문자열을 차례로 연결한 리스트 = 문자열 리스트 
이때, 각 문자열은 항상 끝이'널'문자로 끝남을 잊지 말자

행렬
하나의 행의 자료끼리 연결, 그리고 각각의 행끼리 연결하여 만들 수 있는 행렬 리스트
추가로, 행렬의 데이터에서 0이 아닌 다른 값을 가지는 원소가 많은 행렬을 희소 행렬이라 하는데, 이 경우
0이 아닌 값의 위치 정보와 값만 저장하는 방식으로 효율을 높일 수도 있다.


리스트의 추상 자료형
리스트를 사용하기 위해 다음과 같은 기능(Operation)이 필요하다.
1. 리스트 생성						CreateList()			입력 : 최대 원소 갯수					출력 : 리스트L
2. 리스트 삭제						DeleteList()			입력 : 리스트L						출력 :
3. 원소의 추가 가능성 여부 판단		IsFull()				입력 : 리스트L						출력 : T/F
4. 원소 생성							AddElement()			입력 : 리스트L, 원소 위치, 원소		출력 : 성공/실패
5. 원소 삭제							RemoveElement()			입력 : 리스트L, 원소 위치				출력 : 성공/실패
6. 리스트 초기화						ClearList()				입력 : 리스트L						출력 :
7. 원소의 개수						GetListLenth()			입력 : 리스트L, 원소 위치, 			출력 : 원소 개수
8. 원소의 반환						GetElement()			입력 : 리스트L, 원소 위치				출력 : 위치의 원소

경우에 따라서는 디버깅을 위해서 모든 노드의 내용을 출력하는 DisplayList()도 필요할 수 있다.